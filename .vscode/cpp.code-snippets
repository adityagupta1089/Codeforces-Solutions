{
  // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "64 bit integer": {
    "prefix": "ll",
    "body": "int64_t"
  },
  "testcases": {
    "prefix": "tc",
    "body": ["int t;", "cin >> t;", "while (t--) {", "    $0", "}"]
  },
  "input array": {
    "prefix": "ac",
    "body": [
      "int ${1:a}[${2:n}];",
      "for (int i = 0; i < $2; i++) {",
      "    cin >> $1[i];",
      "}",
      "$0"
    ]
  },
  "input 1": {
    "prefix": "1c",
    "body": ["int ${1:n};", "cin >> $1;", "$0"]
  },
  "input 2": {
    "prefix": "2c",
    "body": ["int ${1:n}, ${2:k};", "cin >> $1 >> $2;", "$0"]
  },
  "input 3": {
    "prefix": "3c",
    "body": ["int ${1:n}, ${2:m}, ${3:k};", "cin >> $1 >> $2 >> $3;", "$0"]
  },
  "for loop": {
    "prefix": "fori",
    "body": ["for (int ${1:i} = 0; $1 < $2; $1++) {", "    $0", "}"]
  }
}
